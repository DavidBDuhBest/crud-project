/**
 * SPDX-FileCopyrightText: Â© 2022 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { InternalDispatch } from '@clayui/shared';
import React from 'react';
import { Bar } from './Bar';
import { Content } from './Content';
import { Item } from './Item';
import { Panel } from './Panel';
declare type Props = {
    /**
     * Flag to position the component using absolute rather than a
     * fixed position.
     */
    absolute?: boolean;
    /**
     * The VerticalBar content.
     */
    children: React.ReactNode;
    /**
     * Sets the CSS className for the component.
     */
    className?: string;
    /**
     * Sets the position of the vertical bar.
     */
    position?: 'left' | 'right';
    /**
     * Sets the current active panel (controlled).
     */
    active?: React.Key | undefined;
    /**
     * Sets the default active panel (uncontrolled).
     */
    defaultActive?: React.Key | undefined;
    /**
     * Callback is called when the active state changes (controlled).
     */
    onActiveChange?: InternalDispatch<React.Key | undefined>;
};
export declare function VerticalBar(props: Props): JSX.Element & {
    Item: typeof Item;
    Content: typeof Content;
    Panel: typeof Panel;
    Bar: typeof Bar;
};
export declare namespace VerticalBar {
    var Bar: typeof import("./Bar").Bar;
    var Content: typeof import("./Content").Content;
    var Item: React.ForwardRefExoticComponent<{
        children: React.ReactElement<any, string | React.JSXElementConstructor<any>>;
        divider?: boolean | undefined;
        expand?: boolean | undefined;
        keyValue?: React.Key | undefined;
        style?: React.StyleHTMLAttributes<HTMLLIElement> | undefined;
    } & React.RefAttributes<HTMLLIElement>>;
    var Panel: typeof import("./Panel").Panel;
}
export {};
