{"version":3,"sources":["../src/KnowledgeBase.js"],"names":["width","setSite","res","get","Liferay","setFolders","data","setArticles","document","seeArticle","JSON","setChildren","seeFolder","setFolderFolders","setFolderArticles","changeT","method","headers","body","title","setHeadline","changeB","content","setContent","postArticle","setTitle","postInFolder","postInArticle","putArticle","deleteArticle","setArticleId","changeN","name","postFolder","setName","postFolderFolder","deleteFolder","setFolderId","marginBottom","display","folder","id","article","e","articleId","marginTop","className","containerProps","clear","margin","folderId","KnowledgeBase"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport ClayForm, {ClayInput} from '@clayui/form';\nimport ClayButton from '@clayui/button';\nimport ClayTable from '@clayui/table';\nimport ClayDropDown from '@clayui/drop-down';\n\nimport { getSite } from './site';\n\nfunction KnowledgeBase() {\n  return (\n    <div style={{width:'100%'}}>\n    <h1>Knowledge Base</h1>\n    <hr />\n      <div>\n        <CRUDArticle />\n      </div>\n    </div>\n  );\n}\n\nfunction CRUDArticle() {\n  const [site, setSite] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [articles, setArticles] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [articleId, setArticleId] = useState('');\n  const [childArticles, setChildren] = useState([]);\n  const [name, setName] = useState('');\n  const [folderId, setFolderId] = useState('');\n  const [folderArticles, setFolderArticles] = useState([]);\n  const [folderFolders, setFolderFolders] = useState([]);\n  \n  useEffect(() => {\n    getSite().then(res => {\n      setSite(res.items[0].id);\n    })\n  }, []);\n\n\n  const get = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/sites/${site}/knowledge-base-folders/`)\n      .then(res => res.json())\n      .then(data => setFolders(data.items));\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/sites/${site}/knowledge-base-articles/`)\n      .then(res => res.json())\n      .then(data => setArticles(data.items));\n    document.getElementById('articleButton').firstChild.innerHTML = 'Update Knowledge Base';\n    document.getElementById('articleTable').style.display = 'block';\n  }, [site]);\n\n  const seeArticle = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-articles/${articleId}`)\n      .then(res => res.json())\n      .then(data => {\n        document.getElementById('at').innerHTML = JSON.stringify(data.title);\n        document.getElementById('ab').innerHTML = JSON.stringify(data.articleBody);\n      });\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-articles/${articleId}/knowledge-base-articles/`)\n      .then(res => res.json())\n      .then(data => setChildren(data.items));\n  }, [articleId]);\n\n  const seeFolder = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-folders/${folderId}/knowledge-base-folders/`)\n      .then(res => res.json())\n      .then(data => setFolderFolders(data.items));\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-folders/${folderId}/knowledge-base-articles/`)\n      .then(res => res.json())\n      .then(data => setFolderArticles(data.items));\n  }, [folderId]);\n  \n\n  const changeT = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-articles/${articleId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'title':title})\n    }).then(() => setHeadline(''));\n  }, [articleId, title]);\n\n  const changeB = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-articles/${articleId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'articleBody':content})\n    }).then(() => setContent(''));\n  }, [articleId, content]);\n\n  const postArticle = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/sites/${site}/knowledge-base-articles`, {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'title':title, 'articleBody':content})\n    }).then(() => {\n      setTitle('');\n      setContent('');\n    });\n  }, [site, title, content]);\n\n  const postInFolder = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-folders/${folderId}/knowledge-base-articles/`, {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'title':title, 'articleBody':content})\n    }).then(() => {\n      setTitle('');\n      setContent('');\n    });\n  }, [folderId, title, content]);\n\n  const postInArticle = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-articles/${articleId}/knowledge-base-articles/`, {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'title':title, 'articleBody':content})\n    }).then(() => {\n      setTitle('');\n      setContent('');\n    });\n  }, [articleId, title, content]);\n  \n  const putArticle = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-articles/${articleId}`, {\n      method: 'PUT',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'title':title, 'articleBody':content})\n    }).then(() => {\n        setTitle('');\n        setContent('');\n    });\n  },\n  [\n    articleId,\n    title,\n    content\n  ]);\n\n  const deleteArticle = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-articles/${articleId}`, {method:'DELETE'})\n      .then(() => setArticleId(''));\n    document.getElementById('at').innerHTML = 'No Article Selected';\n    document.getElementById('ab').innerHTML = 'No Article Selected';\n  }, [articleId]);\n\n\n  const changeN = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-folders/${folderId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'name':name})\n    }).then(() => setContent(''));\n  }, [folderId, name]);\n\n  const postFolder = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/sites/${site}/knowledge-base-folders`, {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'name':name})\n    }).then(() => {\n      setName('');\n    });\n  }, [site, name]);\n\n  const postFolderFolder = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-folders/${folderId}/knowledge-base-folders/`, {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'name':name})\n    }).then(() => {\n      setName('');\n    });\n  }, [folderId, name]);\n\n  const deleteFolder = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/knowledge-base-folders/${folderId}`, {method:'DELETE'})\n      .then(() => setFolderId(''))\n      .then(() => setFolderArticles([]))\n      .then(() => setFolderFolders([]));\n  }, [folderId]);\n  \n\n  return (\n    <div>\n      <div style={{width:'100%', marginBottom:\"2em\"}}>\n        <div style={{width:'49%', float:'left', marginBottom:\"3em\"}}>\n          <div style={{marginBottom:\"2em\"}}>\n            <div id=\"articleButton\">\n              <ClayButton displayType='secondary' onClick={() => get()}>\n                Show Knowledge Base\n              </ClayButton>\n            </div>\n            <div id='articleTable' style={{display:'none'}}>\n              <ClayTable>\n                <ClayTable.Head>\n                  <ClayTable.Row>\n                    <ClayTable.Cell headingCell>{\"ID\"}</ClayTable.Cell>\n                    <ClayTable.Cell headingCell>{\"Title\"}</ClayTable.Cell>\n                    <ClayTable.Cell headingCell>{\"Type\"}</ClayTable.Cell>\n                  </ClayTable.Row>\n                </ClayTable.Head>\n                <ClayTable.Body>\n                  {folders.map(folder => (\n                    <ClayTable.Row key={folder.id}>\n                      <ClayTable.Cell headingTitle>{folder.id}</ClayTable.Cell>\n                      <ClayTable.Cell>{folder.name}</ClayTable.Cell>\n                      <ClayTable.Cell>{\"Folder\"}</ClayTable.Cell>\n                    </ClayTable.Row>\n                  ))}\n                  {articles.map(article => (\n                    <ClayTable.Row key={article.id}>\n                      <ClayTable.Cell headingTitle>{article.id}</ClayTable.Cell>\n                      <ClayTable.Cell>{article.title}</ClayTable.Cell>\n                      <ClayTable.Cell>{\"Article\"}</ClayTable.Cell>\n                    </ClayTable.Row>\n                  ))}\n                </ClayTable.Body>\n              </ClayTable>\n            </div>\n          </div>\n          <ClayForm.Group>\n            <label htmlFor='articleId'>Article ID</label>\n            <ClayInput\n              id=\"articleId\"\n              onChange={e => setArticleId(e.target.value)}\n              type=\"text\"\n              value={articleId}\n            />\n          </ClayForm.Group>\n          <ClayButton displayType=\"secondary\" onClick={() => seeArticle()}>\n            See Article\n          </ClayButton>\n          <ClayForm.Group>\n            <label htmlFor='title' style={{marginTop:\"3em\"}}>Title</label>\n            <ClayInput\n              id=\"title\"\n              onChange={e => setTitle(e.target.value)}\n              type=\"text\"\n              value={title}\n            />\n          </ClayForm.Group>\n          <ClayButton displayType={null} onClick={() => changeT()}>\n            Update Title\n          </ClayButton>\n          <ClayForm.Group>\n            <label htmlFor='content' style={{marginTop:\"2em\"}}>Article Body</label>\n            <ClayInput\n              id=\"content\"\n              component=\"textarea\"\n              onChange={e => setContent(e.target.value)}\n              type=\"text\"\n              value={content}\n            />\n          </ClayForm.Group>\n          <ClayButton displayType={null} onClick={() => changeB()}>\n            Update Body\n          </ClayButton>\n          <br style={{marginBottom:'2em'}}/>\n          <div id=\"buttons\">\n            <div style={{float:'left'}}>\n              <ClayDropDown\n                trigger={<ClayButton displayType=\"primary\">Post Article</ClayButton>}\n                menuElementAttrs={{\n                  className: 'my-custom-dropdown-menu',\n                  containerProps: {\n                    className: 'dropdown-menu-react-portal-div',\n                    id: 'dropdownMenuReactPortalDiv',\n                  },\n                }}\n                closeOnClick\n              >\n                <ClayDropDown.Help>{'Where to post article'}</ClayDropDown.Help>\n                <ClayDropDown.ItemList>\n                  <ClayDropDown.Group header=\"Choose\">\n                    <ClayDropDown.Item onClick={() => postArticle()} key={'option1'}>\n                      Post in Site\n                    </ClayDropDown.Item>\n                    <ClayDropDown.Item onClick={() => postInFolder()} key={'option2'}>\n                      Post in Chosen Folder\n                    </ClayDropDown.Item>\n                    <ClayDropDown.Item onClick={() => postInArticle()} key={'option3'}>\n                      Post in Chosen Article\n                    </ClayDropDown.Item>\n                  </ClayDropDown.Group>\n                </ClayDropDown.ItemList>\n              </ClayDropDown>\n            </div>\n            <div style={{float:'left'}}>\n              <ClayButton displayType=\"secondary\" onClick={() => putArticle()}>\n                Replace Article\n              </ClayButton>\n            </div>\n            \n          </div>\n        </div>\n        <div style={{width:'49%', float:'right'}}>\n          <h2 style={{marginBottom:'1em'}}>Title</h2>\n          <p id=\"at\" style={{marginBottom:'3em'}}>No Article Selected</p>\n          <h2 style={{marginBottom:'1em'}}>Article Body</h2>\n          <p id=\"ab\">No Article Selected</p>\n          <ClayTable>\n            <ClayTable.Head>\n              <ClayTable.Row>\n                <ClayTable.Cell headingCell>{\"Article ID\"}</ClayTable.Cell>\n                <ClayTable.Cell headingCell>{\"Title\"}</ClayTable.Cell>\n              </ClayTable.Row>\n            </ClayTable.Head>\n            <ClayTable.Body>\n              {childArticles.map(article => (\n                <ClayTable.Row key={article.id}>\n                  <ClayTable.Cell headingTitle>{article.id}</ClayTable.Cell>\n                  <ClayTable.Cell>{article.title}</ClayTable.Cell>\n                </ClayTable.Row>\n              ))}\n            </ClayTable.Body>\n          </ClayTable>\n          <ClayButton displayType=\"primary\" onClick={() => deleteArticle()}>\n            Delete Article\n          </ClayButton>\n        </div>\n      </div>\n      <hr style={{clear:'both', margin:'1em'}} />\n      <div style={{width:'100%'}}>\n        <div style={{width:'49%', float:'left'}}>\n          <ClayForm.Group>\n            <label htmlFor='folderId'>Folder ID</label>\n            <ClayInput\n              id=\"folderId\"\n              onChange={e => setFolderId(e.target.value)}\n              type=\"text\"\n              value={folderId}\n            />\n          </ClayForm.Group>\n          <ClayButton displayType=\"secondary\" onClick={() => seeFolder()}>\n            See Folder\n          </ClayButton>\n          <ClayForm.Group>\n            <label htmlFor='name' style={{marginTop:\"3em\"}}>Folder Name</label>\n            <ClayInput\n              id=\"name\"\n              onChange={e => setName(e.target.value)}\n              type=\"text\"\n              value={name}\n            />\n          </ClayForm.Group>\n          <ClayButton displayType={null} onClick={() => changeN()}>\n            Change Folder Name\n          </ClayButton>\n          <br style={{margin:'1em'}}/>\n            <ClayDropDown\n              trigger={<ClayButton displayType=\"primary\">Create Folder</ClayButton>}\n              menuElementAttrs={{\n                className: 'my-custom-dropdown-menu',\n                containerProps: {\n                  className: 'dropdown-menu-react-portal-div',\n                  id: 'dropdownMenuReactPortalDiv',\n                },\n              }}\n              closeOnClick\n            >\n              <ClayDropDown.Help>{'Where to create folder'}</ClayDropDown.Help>\n              <ClayDropDown.ItemList>\n                <ClayDropDown.Group header=\"Choose\">\n                  <ClayDropDown.Item onClick={() => postFolder()} key={'option1'}>\n                    Create in Site\n                  </ClayDropDown.Item>\n                  <ClayDropDown.Item onClick={() => postFolderFolder()} key={'option2'}>\n                    Create in Chosen Folder\n                  </ClayDropDown.Item>\n                </ClayDropDown.Group>\n              </ClayDropDown.ItemList>\n            </ClayDropDown>\n        </div>\n        <div style={{width:'49%', float:'right'}}>\n          <ClayTable>\n            <ClayTable.Head>\n              <ClayTable.Row>\n                <ClayTable.Cell headingCell>{\"ID\"}</ClayTable.Cell>\n                <ClayTable.Cell headingCell>{\"Title\"}</ClayTable.Cell>\n                <ClayTable.Cell headingCell>{\"Type\"}</ClayTable.Cell>\n              </ClayTable.Row>\n            </ClayTable.Head>\n            <ClayTable.Body>\n              {folderFolders.map(folder => (\n                <ClayTable.Row key={folder.id}>\n                  <ClayTable.Cell headingTitle>{folder.id}</ClayTable.Cell>\n                  <ClayTable.Cell>{folder.name}</ClayTable.Cell>\n                  <ClayTable.Cell>{'Folder'}</ClayTable.Cell>\n                </ClayTable.Row>\n              ))}\n              {folderArticles.map(article => (\n                <ClayTable.Row key={article.id}>\n                  <ClayTable.Cell headingTitle>{article.id}</ClayTable.Cell>\n                  <ClayTable.Cell>{article.title}</ClayTable.Cell>\n                  <ClayTable.Cell>{'Article'}</ClayTable.Cell>\n                </ClayTable.Row>\n              ))}\n            </ClayTable.Body>\n          </ClayTable>\n          <ClayButton displayType=\"primary\" onClick={() => deleteFolder()}>\n            Delete Folder\n          </ClayButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n  \n  \nexport default KnowledgeBase;"]}