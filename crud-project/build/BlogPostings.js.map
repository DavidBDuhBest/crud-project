{"version":3,"sources":["../src/BlogPostings.js"],"names":["width","clear","setSite","res","get","Liferay","setBlogs","data","document","seeBlog","JSON","changeH","method","headers","body","headline","setHeadline","changeB","articleBody","setArticleBody","postBlog","putBlog","deleteBlog","setBlogId","marginBottom","display","blog","id","e","blogId","marginTop","BlogPostings"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport ClayForm, {ClayInput} from '@clayui/form';\nimport ClayButton from '@clayui/button';\nimport ClayTable from '@clayui/table';\n\nimport { getSite } from './site';\n\n\nfunction BlogPostings() {\n  return (\n    <div style={{width:'100%'}}>\n      <h1>Blog Posts</h1>\n      <hr />\n      <div>\n        <BlogPosting />\n      </div>\n      <br style={{clear:'both'}}/>\n    </div>\n  );\n}\n\n\nfunction BlogPosting() {\n  const [site, setSite] = useState('');\n  const [headline, setHeadline] = useState('');\n  const [articleBody, setArticleBody] = useState('');\n  const [blogId, setBlogId] = useState('');\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n\t  getSite().then(res => {\n      setSite(res.items[0].id);\n\t})\n  }, []);\n\n\n  const get = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/sites/${site}/blog-postings/`)\n      .then(res => res.json())\n      .then(data => setBlogs(data.items));\n    document.getElementById('blogButton').firstChild.innerHTML = 'Update Blogs';\n    document.getElementById('blogTable').style.display = 'block';\n  }, [site]);\n\n  const seeBlog = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/blog-postings/${blogId}`)\n      .then(res => res.json())\n      .then(data => {\n        document.getElementById('head').innerHTML = JSON.stringify(data.headline);\n        document.getElementById('body').innerHTML = JSON.stringify(data.articleBody);\n      });\n  }, [blogId]);\n\n  const changeH = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/blog-postings/${blogId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'headline':headline})\n    }).then(() => setHeadline(''));\n  }, [blogId, headline]);\n\n  const changeB = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/blog-postings/${blogId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'articleBody':articleBody})\n    }).then(() => setArticleBody(''));\n  }, [blogId, articleBody]);\n\n\n  const postBlog = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/sites/${site}/blog-postings`, {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'headline':headline, 'articleBody':articleBody})\n    }).then(() => {\n        setHeadline('');\n        setArticleBody('');\n    });\n  },\n  [\n    site,\n    headline,\n    articleBody\n  ]);\n\n  const putBlog = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/blog-postings/${blogId}`, {\n      method: 'PUT',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({'headline':headline, 'articleBody':articleBody})\n    }).then(() => {\n        setHeadline('');\n        setArticleBody('');\n    });\n  },\n  [\n    blogId,\n    headline,\n    articleBody\n  ]);\n\n  const deleteBlog = useCallback(() => {\n    Liferay.Util.fetch(`/o/headless-delivery/v1.0/blog-postings/${blogId}`, {method:'DELETE'})\n      .then(() => setBlogId(''));\n    document.getElementById('head').innerHTML = 'No Blog Selected';\n    document.getElementById('body').innerHTML = 'No Blog Selected';\n  }, [blogId]);\n\n  return (\n    <div>\n      <div style={{width:'49%', float:'left'}}>\n        <div style={{marginBottom:\"2em\"}}>\n        <div id=\"blogButton\">\n          <ClayButton displayType='secondary' onClick={() => get()}>\n            Show Blogs\n          </ClayButton>\n        </div>\n        <div id='blogTable' style={{display:'none'}}>\n          <ClayTable>\n            <ClayTable.Head>\n              <ClayTable.Row>\n                <ClayTable.Cell headingCell>\n                  {\"Blog ID\"}\n                </ClayTable.Cell>\n                <ClayTable.Cell headingCell>{\"Blog Headline\"}</ClayTable.Cell>\n              </ClayTable.Row>\n            </ClayTable.Head>\n            <ClayTable.Body>\n              {blogs.map(blog => (\n                <ClayTable.Row key={blog.id}>\n                  <ClayTable.Cell headingTitle>{blog.id}</ClayTable.Cell>\n                  <ClayTable.Cell>{blog.headline}</ClayTable.Cell>\n                </ClayTable.Row>\n              ))}\n            </ClayTable.Body>\n          </ClayTable>\n        </div>\n        </div>\n        <ClayForm.Group>\n          <label htmlFor='blogId'>Blog ID</label>\n          <ClayInput\n            id=\"blogId\"\n            onChange={e => setBlogId(e.target.value)}\n            type=\"text\"\n            value={blogId}\n          />\n        </ClayForm.Group>\n        <ClayButton displayType=\"secondary\" onClick={() => seeBlog()}>\n          See Blog\n        </ClayButton>\n        <ClayForm.Group>\n          <label htmlFor='headline' style={{marginTop:\"3em\"}}>Headline</label>\n          <ClayInput\n            id=\"headline\"\n            onChange={e => setHeadline(e.target.value)}\n            type=\"text\"\n            value={headline}\n          />\n        </ClayForm.Group>\n        <ClayButton displayType={null} onClick={() => changeH()}>\n          Update Headline\n        </ClayButton>\n        <ClayForm.Group>\n          <label htmlFor='articleBody' style={{marginTop:\"2em\"}}>Article Body</label>\n          <ClayInput\n            id=\"articleBody\"\n            component=\"textarea\"\n            onChange={e => setArticleBody(e.target.value)}\n            type=\"text\"\n            value={articleBody}\n          />\n        </ClayForm.Group>\n        <ClayButton displayType={null} onClick={() => changeB()}>\n          Update Body\n        </ClayButton>\n        <br style={{marginBottom:'2em'}}/>\n        <ClayButton displayType=\"primary\" onClick={() => postBlog()}>\n          Post New Blog\n        </ClayButton>\n        <ClayButton displayType=\"secondary\" onClick={() => putBlog()}>\n          Replace Blog\n        </ClayButton>\n      </div>\n      <div style={{width:'49%', float:'right'}}>\n        <h2 style={{marginBottom:'1em'}}>Headline</h2>\n        <p id=\"head\" style={{marginBottom:'3em'}}>No Blog Selected</p>\n        <h2 style={{marginBottom:'1em'}}>Article Body</h2>\n        <p id=\"body\">No Blog Selected</p>\n        <ClayButton displayType=\"primary\" onClick={() => deleteBlog()}>\n          Delete Blog\n        </ClayButton>\n      </div>\n    </div>\n  );\n}\n\n\nexport default BlogPostings;"]}