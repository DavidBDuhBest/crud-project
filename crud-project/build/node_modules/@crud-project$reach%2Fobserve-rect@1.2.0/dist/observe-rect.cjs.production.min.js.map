{"version":3,"sources":["../src/index.ts"],"names":["props","a","b","some","prop","observedNodes","Map","rafId","run","changedStates","forEach","state","node","newRect","getBoundingClientRect","rect","push","callbacks","cb","window","requestAnimationFrame","observe","wasEmpty","size","has","get","set","undefined","hasRectChanged","unobserve","index","indexOf","splice","length","cancelAnimationFrame"],"mappings":";;;;;gEAAA,IAaIO,CAbJ;AAAA,QAAIP,IAA2B,CAC9B,QAD8B,EAE9B,QAF8B,EAG9B,MAH8B,EAI9B,OAJ8B,EAK9B,KAL8B,EAM9B,OAN8B,CAA/B;AAAA,QAYIK,IAAgB,IAAIC,GAAJ,EAZpB,CAYwBA,QAAAA,OAAAA,GAAAA,UAqBvBM,CArBuBN,EAsBvBY,CAtBuBZ,EAsBvBY;AAAAA,aAEO,EACNG,SAAAA,YAAAA;AAAAA,cACKC,IAAkC,MAAvBjB,EAAckB,IAD9BF,CAEKhB,EAAcmB,GAAdnB,CAAkBO,CAAlBP,IACHA,EAAcoB,GAAdpB,CAAkBO,CAAlBP,EAAyBY,SAAzBZ,CAAmCW,IAAnCX,CAAwCa,CAAxCb,CADGA,GAGHA,EAAcqB,GAAdrB,CAAkBO,CAAlBP,EAAwB,EACvBU,MAAAA,KAAMY,CADiB,EAEvBC,gBAAAA,CAAgB,CAFO,EAGvBX,WAAW,CAACC,CAAD,CAHY,EAAxBb,CAHGA,EASAiB,KAjCG,SAANd,CAAM,GAANA;AAAAA,gBACGC,IAA6B,EADhCD,CAEHH,EAAcK,OAAdL,CAAsB,UAACM,CAAD,EAAQC,CAAR,EAAQA;AAAAA,kBARZX,CAQYW;AAAAA,kBARgBV,CAQhBU;AAAAA,kBACzBC,IAAUD,EAAKE,qBAALF,EADeA,CACVE,KAAAA,CAAAA,MATFb,IAUDY,CADGC,MATFb,IAAa,EASXa,GATW,KAAA,CAAA,MAAeZ,IAUpBS,EAAMI,IAVD,MAAeb,IAAa,EAA5B,CASXY,EARpBd,EAAMG,IAANH,CAAW,UAACI,CAAD,EAACA;AAAAA,uBAASH,EAAEG,CAAFH,MAAYC,EAAEE,CAAFF,CAArBE;AAAuBA,eAAnCJ,MAUEW,EAAMI,IAANJ,GAAaE,CAAbF,EACAF,EAAcO,IAAdP,CAAmBE,CAAnBF,CAXFT,CAQoBc;AAGCH,aAJrBN,GAQAI,EAAcC,OAAdD,CAAsB,UAACE,CAAD,EAACA;AACtBA,gBAAMM,SAANN,CAAgBD,OAAhBC,CAAwB,UAACO,CAAD,EAACA;AAAAA,uBAAOA,EAAGP,EAAMI,IAATG,CAAPA;AAAgBH,eAAzCJ;AAAyCI,aAD1CN,CARAJ,EAYAE,IAAQY,OAAOC,qBAAPD,CAA6BX,CAA7BW,CAZRd;AA+BgBG,WAjCP,EAwBHH;AASUG,SAZT,EAeNqB,WAAAA,YAAAA;AAAAA,cACKlB,IAAQN,EAAcoB,GAAdpB,CAAkBO,CAAlBP,CADbwB,CAC+BjB,IAC1BD,CAD0BC,EACnB;AAAA,gBAEJkB,IAAQnB,EAAMM,SAANN,CAAgBoB,OAAhBpB,CAAwBO,CAAxBP,CAFJ,CAGNmB,KAAS,CAATA,IAAYnB,EAAMM,SAANN,CAAgBqB,MAAhBrB,CAAuBmB,CAAvBnB,EAA8B,CAA9BA,CAAZmB,EAGCnB,EAAMM,SAANN,CAAgBsB,MAAhBtB,IAAwBN,EAAAA,MAAAA,CAAqBO,CAArBP,CAHzByB,EAMCzB,EAAckB,IAAdlB,IAAoB6B,qBAAqB3B,CAArB2B,CANrBJ;AAM0CvB;AAAAA,SA1B1C,EAFPW;AA4BiDX,KAlD1BD","sourcesContent":["let props: (keyof DOMRect)[] = [\n\t\"bottom\",\n\t\"height\",\n\t\"left\",\n\t\"right\",\n\t\"top\",\n\t\"width\",\n];\n\nlet rectChanged = (a: DOMRect = {} as DOMRect, b: DOMRect = {} as DOMRect) =>\n\tprops.some((prop) => a[prop] !== b[prop]);\n\nlet observedNodes = new Map<Element, RectProps>();\nlet rafId: number;\n\nlet run = () => {\n\tconst changedStates: RectProps[] = [];\n\tobservedNodes.forEach((state, node) => {\n\t\tlet newRect = node.getBoundingClientRect();\n\t\tif (rectChanged(newRect, state.rect)) {\n\t\t\tstate.rect = newRect;\n\t\t\tchangedStates.push(state);\n\t\t}\n\t});\n\n\tchangedStates.forEach((state) => {\n\t\tstate.callbacks.forEach((cb) => cb(state.rect));\n\t});\n\n\trafId = window.requestAnimationFrame(run);\n};\n\nexport default function observeRect(\n\tnode: Element,\n\tcb: (rect: DOMRect) => void\n) {\n\treturn {\n\t\tobserve() {\n\t\t\tlet wasEmpty = observedNodes.size === 0;\n\t\t\tif (observedNodes.has(node)) {\n\t\t\t\tobservedNodes.get(node)!.callbacks.push(cb);\n\t\t\t} else {\n\t\t\t\tobservedNodes.set(node, {\n\t\t\t\t\trect: undefined,\n\t\t\t\t\thasRectChanged: false,\n\t\t\t\t\tcallbacks: [cb],\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (wasEmpty) run();\n\t\t},\n\n\t\tunobserve() {\n\t\t\tlet state = observedNodes.get(node);\n\t\t\tif (state) {\n\t\t\t\t// Remove the callback\n\t\t\t\tconst index = state.callbacks.indexOf(cb);\n\t\t\t\tif (index >= 0) state.callbacks.splice(index, 1);\n\n\t\t\t\t// Remove the node reference\n\t\t\t\tif (!state.callbacks.length) observedNodes.delete(node);\n\n\t\t\t\t// Stop the loop\n\t\t\t\tif (!observedNodes.size) cancelAnimationFrame(rafId);\n\t\t\t}\n\t\t},\n\t};\n}\n\nexport type PartialRect = Partial<DOMRect>;\n\nexport type RectProps = {\n\trect: DOMRect | undefined;\n\thasRectChanged: boolean;\n\tcallbacks: Function[];\n};\n"]}