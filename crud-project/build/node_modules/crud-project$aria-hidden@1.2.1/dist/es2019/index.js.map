{"version":3,"sources":["index.js"],"names":["getDefaultParent","originalTarget","document","sampleTarget","Array","isArray","ownerDocument","body","counterMap","WeakMap","uncontrolledNodes","markerMap","lockCount","applyAttributeToOthers","parentNode","markerName","controlAttribute","targets","markerCounter","hiddenNodes","elementsToKeep","Set","elementsToStop","keep","el","has","add","forEach","deep","parent","prototype","call","children","node","attr","getAttribute","alreadyHidden","counterValue","get","markerValue","set","push","setAttribute","clear","removeAttribute","delete","hideOthers","from","activeParentNode","querySelectorAll","inertOthers","supportsInert","HTMLElement","hasOwnProperty","suppressOthers"],"mappings":"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","file":"index.js","sourcesContent":["const getDefaultParent = (originalTarget) => {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    const sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nlet counterMap = new WeakMap();\nlet uncontrolledNodes = new WeakMap();\nlet markerMap = {};\nlet lockCount = 0;\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nconst applyAttributeToOthers = (originalTarget, parentNode, markerName, controlAttribute) => {\n    const targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    const markerCounter = markerMap[markerName];\n    const hiddenNodes = [];\n    const elementsToKeep = new Set();\n    const elementsToStop = new Set(targets);\n    const keep = (el) => {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    const deep = (parent) => {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, (node) => {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                const attr = node.getAttribute(controlAttribute);\n                const alreadyHidden = attr !== null && attr !== 'false';\n                const counterValue = (counterMap.get(node) || 0) + 1;\n                const markerValue = (markerCounter.get(node) || 0) + 1;\n                counterMap.set(node, counterValue);\n                markerCounter.set(node, markerValue);\n                hiddenNodes.push(node);\n                if (counterValue === 1 && alreadyHidden) {\n                    uncontrolledNodes.set(node, true);\n                }\n                if (markerValue === 1) {\n                    node.setAttribute(markerName, 'true');\n                }\n                if (!alreadyHidden) {\n                    node.setAttribute(controlAttribute, 'true');\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return () => {\n        hiddenNodes.forEach((node) => {\n            const counterValue = counterMap.get(node) - 1;\n            const markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport const hideOthers = (originalTarget, parentNode, markerName = 'data-aria-hidden') => {\n    const targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    const activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return () => null;\n    }\n    // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n    targets.push(...Array.from(activeParentNode.querySelectorAll('[aria-live]')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport const inertOthers = (originalTarget, parentNode, markerName = 'data-inert-ed') => {\n    const activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return () => null;\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nexport const supportsInert = () => typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport const suppressOthers = (originalTarget, parentNode, markerName = 'data-suppressed') => (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n"]}